import pandas as pd

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
import config

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
df = pd.read_excel(config.file_path)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
balance = config.initial_balance
total_unclosed_amount = 0  # –î–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
trades_total = 0
trades_with_profit = 0
trades_with_loss = 0
tp_hit_count = [0] * len(config.take_profit_percentages)
profit_loss_ratio = 0
initial_balance = config.initial_balance

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏
def process_trade(entry_price, deep_price, ath_price, token, index):
    global balance
    global total_unclosed_amount

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º Stop Loss
    stop_loss_price = entry_price * (1 + config.stop_loss_percent / 100)

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏ TP
    tp_prices = [entry_price * (1 + tp / 100) for tp in config.take_profit_percentages]

    position_percentage = config.position_percentages
    remaining_position = config.deal_amount

    # –ù–∞—á–∏–Ω–∞–µ–º —Å–¥–µ–ª–∫—É
    print(f"‚Üí Starting trade {index + 1} - Token: ü™ô {token}")
    print(f"Entry Price: üí∞ {entry_price:.10f}, Stop Loss: ‚¨áÔ∏èüõë {stop_loss_price:.10f}")
    print(f"Take Profits: {', '.join([f'‚ÜóÔ∏èüü¢ {tp:.10f}' for tp in tp_prices])}")

    # –ü–æ–∫—É–ø–∞–µ–º —Ç–æ–∫–µ–Ω—ã, —É–º–µ–Ω—å—à–∞—è –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏
    balance -= remaining_position

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    stop_loss_hit = deep_price <= stop_loss_price
    if stop_loss_hit:
        # –ï—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª —Å—Ç–æ–ø-–ª–æ—Å—Å, –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Å–ø–∏—Å—ã–≤–∞–µ–º —Å—É–º–º—É —É–±—ã—Ç–∫–∞
        loss = remaining_position * abs(config.stop_loss_percent) / 100
        balance -= loss
        remaining_position = 0
        print(f"‚¨áÔ∏è‚ùå Stop Loss hit at price {deep_price:.10f}, position closed, loss: {loss:.2f}$")
        print(f"ü§î Remaining unclosed position: {remaining_position:.2f}$")
        print(f"Final Balance after trade {index + 1}: üôâ {balance:.2f}$, excluding unclosed position")
        print(f"üò¨ Unclosed Amount (remaining in position): {remaining_position:.2f}$")
        print("-" * 50)
        return remaining_position

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ Take Profit
    remaining_position_after_tps = remaining_position  # –û—Å—Ç–∞—Ç–æ–∫ –ø–æ–∑–∏—Ü–∏–∏
    total_profit = 0  # –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å –æ—Ç TP

    for i, tp in enumerate(tp_prices):
        if ath_price >= tp:  # –ï—Å–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç TP
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—É–º–º—É –Ω–∞ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ TP
            fixed_position = remaining_position_after_tps * position_percentage[i] / 100
            remaining_position_after_tps -= fixed_position

            # –ü—Ä–∏–±—ã–ª—å —Å —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏
            profit = fixed_position * (tp - entry_price) / entry_price
            total_profit += fixed_position + profit  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—É–º–º—É –∏ –ø—Ä–∏–±—ã–ª—å

            print(f"‚¨ÜÔ∏è TP {tp:.10f} hit, position closed {position_percentage[i]:.2f}% (üíµ Profit: {fixed_position + profit:.2f}$)")

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å–¥–µ–ª–∫–µ
    if total_profit > 0:
        print(f"üéØ Result: Successful TP hit")
    else:
        print(f"üí© Result: No TP hit")

    print(f"ü§î Remaining unclosed position: {remaining_position_after_tps:.2f}$")
    balance += total_profit  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–±—ã–ª—å –∫ –±–∞–ª–∞–Ω—Å—É
    print(f"Final Balance after trade {index + 1}: üíÖ {balance:.2f}$, excluding unclosed position")
    print(f"üò¨ Unclosed Amount (remaining in position): {remaining_position_after_tps:.2f}$")
    print("-" * 50)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫ –æ–±—â–µ–π —Å—É–º–º–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤
    total_unclosed_amount += remaining_position_after_tps

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å–¥–µ–ª–∫–∏
    return remaining_position_after_tps

print("\n--- Configuration Parameters ---")
print(f"Initial Balance: {config.initial_balance}")
print(f"Deal Amount per Trade: {config.deal_amount}")
print(f"Stop Loss Percentage: {config.stop_loss_percent}%")
print(f"Take Profit Percentages: {config.take_profit_percentages}")
print(f"Position Percentages: {config.position_percentages}")
print(f"Max Take Profit Levels: {config.max_take_profit_levels}")
print("--- End of Configuration ---\n")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–¥–µ–ª–æ–∫
for i, row in df.iterrows():
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    entry_price = row['EntryPrice']
    deep_price = row['DeepPrice']
    ath_price = row['ATHpriceAfterSignal']

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–¥–µ–ª–∫—É
    trades_total += 1
    remaining_position = process_trade(entry_price, deep_price, ath_price, row['Token'], i)

    # –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å–¥–µ–ª–∫–∞–º
    if deep_price <= entry_price * (1 + config.stop_loss_percent / 100):
        trades_with_loss += 1
    elif ath_price >= min([entry_price * (1 + tp / 100) for tp in config.take_profit_percentages]):
        trades_with_profit += 1
        for j, tp in enumerate([entry_price * (1 + tp / 100) for tp in config.take_profit_percentages]):
            if ath_price >= tp:
                tp_hit_count[j] += 1

# –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
if trades_with_loss > 0:
    profit_loss_ratio = trades_with_profit / trades_with_loss
else:
    profit_loss_ratio = trades_with_profit

x_return = (balance - initial_balance) / initial_balance

print(f"\n--- ‚ú® Final Statistics ‚ú® ---")
print(f"Total Trades Processed: {trades_total} ‚ö°Ô∏è")
print(f"Trades Closed with Profit: {trades_with_profit} ü¶°")
print(f"Trades Closed with Loss (SL hit): {trades_with_loss}‚ùå")
for k, tp_count in enumerate(tp_hit_count):
    print(f"Trades Closed at TP Level {k + 1}: {tp_count} ‚úÖ")
print(f"Profit/Loss Ratio: {profit_loss_ratio:.2f} ü§ñ")
print(f"Total X Return on Balance: {x_return:.2f}x üåö")
print("--- ‚ú® End of Statistics ‚ú® ---\n")

# –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞ –∏ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤
print(f"\nFinal Balance after all trades: üíÖ {balance:.2f}$")
print(f"üíÄ Total Unclosed Amount across all trades: {total_unclosed_amount:.2f}$")
